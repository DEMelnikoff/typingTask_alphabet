{
  "version": 3,
  "sources": ["../../@jspsych/plugin-instructions/src/index.ts"],
  "sourcesContent": ["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"instructions\",\n  parameters: {\n    /** Each element of the array is the HTML-formatted content for a single page. */\n    pages: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Pages\",\n      default: undefined,\n      array: true,\n    },\n    /** The key the subject can press in order to advance to the next page. */\n    key_forward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key forward\",\n      default: \"ArrowRight\",\n    },\n    /** The key that the subject can press to return to the previous page. */\n    key_backward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key backward\",\n      default: \"ArrowLeft\",\n    },\n    /** If true, the subject can return to the previous page of the instructions. */\n    allow_backward: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow backward\",\n      default: true,\n    },\n    /** If true, the subject can use keyboard keys to navigate the pages. */\n    allow_keys: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow keys\",\n      default: true,\n    },\n    /** If true, then a \"Previous\" and \"Next\" button will be displayed beneath the instructions. */\n    show_clickable_nav: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show clickable nav\",\n      default: false,\n    },\n    /** If true, and clickable navigation is enabled, then Page x/y will be shown between the nav buttons. */\n    show_page_number: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show page number\",\n      default: false,\n    },\n    /** The text that appears before x/y (current/total) pages displayed with show_page_number. */\n    page_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Page label\",\n      default: \"Page\",\n    },\n    /** The text that appears on the button to go backwards. */\n    button_label_previous: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label previous\",\n      default: \"Previous\",\n    },\n    /** The text that appears on the button to go forwards. */\n    button_label_next: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label next\",\n      default: \"Next\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **instructions**\n *\n * jsPsych plugin to display text (including HTML-formatted strings) during the experiment.\n * Use it to show a set of pages that participants can move forward/backward through.\n * Page numbers can be displayed to help with navigation by setting show_page_number to true.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-instructions/ instructions plugin documentation on jspsych.org}\n */\nclass InstructionsPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var current_page = 0;\n\n    var view_history = [];\n\n    var start_time = performance.now();\n\n    var last_page_update_time = start_time;\n\n    function btnListener(evt) {\n      evt.target.removeEventListener(\"click\", btnListener);\n      if (this.id === \"jspsych-instructions-back\") {\n        back();\n      } else if (this.id === \"jspsych-instructions-next\") {\n        next();\n      }\n    }\n\n    function show_current_page() {\n      var html = trial.pages[current_page];\n\n      var pagenum_display = \"\";\n      if (trial.show_page_number) {\n        pagenum_display =\n          \"<span style='margin: 0 1em;' class='\" +\n          \"jspsych-instructions-pagenum'>\" +\n          trial.page_label +\n          \" \" +\n          (current_page + 1) +\n          \"/\" +\n          trial.pages.length +\n          \"</span>\";\n      }\n\n      if (trial.show_clickable_nav) {\n        var nav_html = \"<div class='jspsych-instructions-nav' style='padding: 10px 0px;'>\";\n        if (trial.allow_backward) {\n          var allowed = current_page > 0 ? \"\" : \"disabled='disabled'\";\n          nav_html +=\n            \"<button id='jspsych-instructions-back' class='jspsych-btn' style='margin-right: 5px;' \" +\n            allowed +\n            \">&lt; \" +\n            trial.button_label_previous +\n            \"</button>\";\n        }\n        if (trial.pages.length > 1 && trial.show_page_number) {\n          nav_html += pagenum_display;\n        }\n        nav_html +=\n          \"<button id='jspsych-instructions-next' class='jspsych-btn'\" +\n          \"style='margin-left: 5px;'>\" +\n          trial.button_label_next +\n          \" &gt;</button></div>\";\n\n        html += nav_html;\n        display_element.innerHTML = html;\n        if (current_page != 0 && trial.allow_backward) {\n          display_element\n            .querySelector(\"#jspsych-instructions-back\")\n            .addEventListener(\"click\", btnListener);\n        }\n\n        display_element\n          .querySelector(\"#jspsych-instructions-next\")\n          .addEventListener(\"click\", btnListener);\n      } else {\n        if (trial.show_page_number && trial.pages.length > 1) {\n          // page numbers for non-mouse navigation\n          html += \"<div class='jspsych-instructions-pagenum'>\" + pagenum_display + \"</div>\";\n        }\n        display_element.innerHTML = html;\n      }\n    }\n\n    function next() {\n      add_current_page_to_view_history();\n\n      current_page++;\n\n      // if done, finish up...\n      if (current_page >= trial.pages.length) {\n        endTrial();\n      } else {\n        show_current_page();\n      }\n    }\n\n    function back() {\n      add_current_page_to_view_history();\n\n      current_page--;\n\n      show_current_page();\n    }\n\n    function add_current_page_to_view_history() {\n      var current_time = performance.now();\n\n      var page_view_time = Math.round(current_time - last_page_update_time);\n\n      view_history.push({\n        page_index: current_page,\n        viewing_time: page_view_time,\n      });\n\n      last_page_update_time = current_time;\n    }\n\n    const endTrial = () => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboard_listener);\n      }\n\n      display_element.innerHTML = \"\";\n\n      var trial_data = {\n        view_history: view_history,\n        rt: Math.round(performance.now() - start_time),\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    const after_response = (info) => {\n      // have to reinitialize this instead of letting it persist to prevent accidental skips of pages by holding down keys too long\n      keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n        allow_held_key: false,\n      });\n      // check if key is forwards or backwards and update page\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_backward)) {\n        if (current_page !== 0 && trial.allow_backward) {\n          back();\n        }\n      }\n\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_forward)) {\n        next();\n      }\n    };\n\n    show_current_page();\n\n    if (trial.allow_keys) {\n      var keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n      });\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    let curr_page = 0;\n    let rt = 0;\n    const view_history = [];\n\n    while (curr_page !== trial.pages.length) {\n      const view_time = this.jsPsych.randomization.sampleExGaussian(3000, 300, 1 / 300);\n      view_history.push({ page_index: curr_page, viewing_time: view_time });\n      rt += view_time;\n      if (curr_page == 0 || !trial.allow_backward) {\n        curr_page++;\n      } else {\n        if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n          curr_page++;\n        } else {\n          curr_page--;\n        }\n      }\n    }\n\n    const default_data = {\n      view_history: view_history,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const advance = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_forward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-next\"),\n          rt\n        );\n      }\n    };\n\n    const backup = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_backward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-back\"),\n          rt\n        );\n      }\n    };\n\n    let curr_page = 0;\n    let t = 0;\n    for (let i = 0; i < data.view_history.length; i++) {\n      if (i == data.view_history.length - 1) {\n        advance(t + data.view_history[i].viewing_time);\n      } else {\n        if (data.view_history[i + 1].page_index > curr_page) {\n          advance(t + data.view_history[i].viewing_time);\n        }\n        if (data.view_history[i + 1].page_index < curr_page) {\n          backup(t + data.view_history[i].viewing_time);\n        }\n        t += data.view_history[i].viewing_time;\n        curr_page = data.view_history[i + 1].page_index;\n      }\n    }\n  }\n}\n\nexport default InstructionsPlugin;\n"],
  "mappings": "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",
  "names": ["info"]
}
